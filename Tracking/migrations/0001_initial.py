# Generated by Django 5.2.1 on 2025-05-27 14:29

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Inmate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inmate_id', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('parole_start_date', models.DateField()),
                ('parole_end_date', models.DateField()),
                ('parole_status', models.CharField(choices=[('active', 'Active Parole'), ('violated', 'Parole Violated'), ('completed', 'Parole Completed'), ('suspended', 'Parole Suspended')], default='active', max_length=20)),
                ('emergency_contact_name', models.CharField(max_length=100)),
                ('emergency_contact_phone', models.CharField(max_length=15)),
                ('home_address', models.TextField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='inmate_photos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='GeofenceZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('zone_type', models.CharField(choices=[('allowed', 'Allowed Zone'), ('restricted', 'Restricted Zone'), ('home', 'Home Zone'), ('work', 'Work Zone'), ('exclusion', 'Exclusion Zone')], max_length=20)),
                ('center_latitude', models.DecimalField(decimal_places=6, max_digits=10)),
                ('center_longitude', models.DecimalField(decimal_places=6, max_digits=10)),
                ('radius_meters', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('days_of_week', models.CharField(default='1234567', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inmate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geofence_zones', to='Tracking.inmate')),
            ],
        ),
        migrations.CreateModel(
            name='ParoleOfficer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('badge_number', models.CharField(max_length=20, unique=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('department', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geofence_violations', models.JSONField(default=list)),
                ('device_tampering', models.JSONField(default=list)),
                ('low_battery', models.JSONField(default=list)),
                ('device_offline', models.JSONField(default=list)),
                ('emergency_alerts', models.JSONField(default=list)),
                ('quiet_hours_start', models.TimeField(default='22:00:00')),
                ('quiet_hours_end', models.TimeField(default='06:00:00')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('officer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Tracking.paroleofficer')),
            ],
        ),
        migrations.AddField(
            model_name='inmate',
            name='assigned_officer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Tracking.paroleofficer'),
        ),
        migrations.CreateModel(
            name='TrackingDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Under Maintenance'), ('tampered', 'Tampered'), ('low_battery', 'Low Battery')], default='active', max_length=20)),
                ('battery_level', models.FloatField(default=100.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('last_ping', models.DateTimeField(blank=True, null=True)),
                ('firmware_version', models.CharField(default='1.0.0', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inmate', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tracking_device', to='Tracking.inmate')),
            ],
        ),
        migrations.CreateModel(
            name='LocationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10)),
                ('altitude', models.FloatField(default=0.0)),
                ('speed', models.FloatField(default=0.0)),
                ('satellites', models.IntegerField(default=0)),
                ('accuracy', models.FloatField(default=0.0)),
                ('timestamp', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_history', to='Tracking.trackingdevice')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CurrentLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=10)),
                ('altitude', models.FloatField(default=0.0)),
                ('speed', models.FloatField(default=0.0)),
                ('satellites', models.IntegerField(default=0)),
                ('accuracy', models.FloatField(default=0.0)),
                ('timestamp', models.DateTimeField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='current_location', to='Tracking.trackingdevice')),
            ],
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('alert_type', models.CharField(choices=[('geofence_violation', 'Geofence Violation'), ('device_tamper', 'Device Tampering'), ('low_battery', 'Low Battery'), ('device_offline', 'Device Offline'), ('emergency', 'Emergency Alert'), ('speed_violation', 'Speed Violation'), ('curfew_violation', 'Curfew Violation')], max_length=30)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('status', models.CharField(choices=[('new', 'New'), ('acknowledged', 'Acknowledged'), ('investigating', 'Under Investigation'), ('resolved', 'Resolved'), ('false_alarm', 'False Alarm')], default='new', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('location_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inmate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='Tracking.inmate')),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Tracking.paroleofficer')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='Tracking.trackingdevice')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
